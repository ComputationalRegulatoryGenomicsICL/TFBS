.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TFBS::Site 3"
.TH TFBS::Site 3 "2005-01-04" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TFBS::Site \- a nucleotide sequence feature object representing (possibly putative) transcription factor binding site.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # manual creation of site object;
\&    # for details, see documentation of Bio::SeqFeature::Generic;
\&
\&    my $site = TFBS::Site
\&                  (\-start => $start_pos,     # integer
\&                   \-end   => $end_pos,       # integer
\&                   \-score => $score,         # float
\&                   \-source => "TFBS",        # string
\&                   \-primary => "TF binding site",  # primary tag
\&                   \-strand => $strand,       # \-1, 0 or 1
\&                   \-seqobj => $seqobj,       # a Bio::Seq object whose sequence
\&                                             #            contains the site
\&                   \-pattern => $pattern_obj  # usu. TFBS::Matrix:PWM obj.
\&                   \-);
\&
\&
\&    # Searching sequence with a pattern (PWM) and retrieving individual sites:
\&    #
\&    #   The following objects should be defined for this example:
\&    #       $pwm    \-   a TFBS::Matrix::PWM object
\&    #       $seqobj \-   a Bio::Seq object
\&    #   Consult the documentation for the above modules if you do not know
\&    #   how to create them.
\&
\&    #   Scanning sequence with $pwm returns a TFBS::SiteSet object:
\&
\&    my $site_set = $pwm\->search_seq(\-seqobj => $seqobj,
\&                                    \-threshold => "80%");
\&
\&    #   To retrieve individual sites from $site_set, create an iterator obj:
\&
\&    my $site_iterator = $site_set\->Iterator(\-sort_by => "score");
\&
\&    while (my $site = $site_iterator\->next())  {
\&        # do something with $site
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
TFBS::Site object holds data for a (possibly predicted) transcription factor binding site on a nucleotide sequence (start, end, strand, score, tags, as well as references to the corresponding sequence and pattern objects). TFBS::Site is a subclass of Bio::SeqFeature::Generic and has acces to all of its method. Additionally, it contains the \fIpattern()\fR method, an accessor for pattern object associated with the site object.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
Please send bug reports and other comments to the author.
.SH "AUTHOR \- Boris Lenhard"
.IX Header "AUTHOR - Boris Lenhard"
Boris Lenhard <Boris.Lenhard@cgb.ki.se>
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods. Internal methods are preceded with an underscore.
.PP
TFBS::Site is a class that extends Bio::SeqFeature::Generic. Please consult Bio::SeqFeature::Generic documentation for other available methods.
.SS "new"
.IX Subsection "new"
.Vb 12
\& Title   : new
\& Usage   : my $site = TFBS::Site\->new(%args)
\& Function: constructor for the TFBS::Site object
\& Returns : TFBS::Site object
\& Args    : \-start,       # integer
\&           \-end,         # integer
\&           \-strand,      # \-1, 0 or 1
\&           \-score,       # float
\&           \-source,      # string (method used to detect it)
\&           \-primary,     # string (primary tag)
\&           \-seqobj,      # a Bio::Seq object
\&           \-pattern      # a pattern object, usu. TFBS::Matrix::PWM
.Ve
.SS "pattern"
.IX Subsection "pattern"
.Vb 6
\& Title   : pattern
\& Usage   : my $pattern = $site\->pattern();  # gets the pattern
\&           $site\->pattern($pwm);            # sets the pattern to $pwm
\& Function: gets/sets the pattern object associated with the site
\& Returns : pattern object, here TFBS::Matrix::PWM object
\& Args    : pattern object (optional, for setting the pattern only)
.Ve
.SS "rel_score"
.IX Subsection "rel_score"
.Vb 7
\& Title   : rel_score
\& Usage   : my $percent_score = $site\->rel_score() * 100;  # gets the pattern
\& Function: gets relative score (between 0.0 to 1.0) with respect of the score
\&           range of the associated pattern (matrix)
\& Returns : floating point number between 0 and 1,
\&           or undef if pattern not defined
\& Args    : none
.Ve
.SS "\s-1GFF\s0"
.IX Subsection "GFF"
.Vb 7
\& Title   : GFF
\& Usage   : print $site\->GFF();
\&         : print $site\->GFF($gff_formatter)
\& Function: returns a "standard" GFF string \- the "generic" gff_string
\&           method is left untouched for possible customizations
\& Returns : a string (NOT newline terminated! )
\& Args    : a $gff_formatter function reference (optional)
.Ve
.SS "location"
.IX Subsection "location"
.SS "start"
.IX Subsection "start"
.SS "end"
.IX Subsection "end"
.SS "length"
.IX Subsection "length"
.SS "score"
.IX Subsection "score"
.SS "frame"
.IX Subsection "frame"
.SS "sub_SeqFeature"
.IX Subsection "sub_SeqFeature"
.SS "add_sub_SeqFeature"
.IX Subsection "add_sub_SeqFeature"
.SS "flush_sub_SeqFeature"
.IX Subsection "flush_sub_SeqFeature"
.SS "primary_tag"
.IX Subsection "primary_tag"
.SS "source_tag"
.IX Subsection "source_tag"
.SS "has_tag"
.IX Subsection "has_tag"
.SS "add_tag_value"
.IX Subsection "add_tag_value"
.SS "each_tag_value"
.IX Subsection "each_tag_value"
.SS "all_tags"
.IX Subsection "all_tags"
.SS "remove_tag"
.IX Subsection "remove_tag"
.SS "attach_seq"
.IX Subsection "attach_seq"
.SS "seq"
.IX Subsection "seq"
.SS "entire_seq"
.IX Subsection "entire_seq"
.SS "seq_id"
.IX Subsection "seq_id"
.SS "annotation"
.IX Subsection "annotation"
.SS "gff_format"
.IX Subsection "gff_format"
.SS "gff_string"
.IX Subsection "gff_string"
The above methods are inherited from Bio::SeqFeature::Generic.
Please see Bio::SeqFeature::Generic for details on their usage.
